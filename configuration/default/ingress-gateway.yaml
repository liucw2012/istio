apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  labels:
    chart: gateways
    heritage: Tiller
    release: istio
    app: istio-ingressgateway
    istio: ingressgateway
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: ingressgateway
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        chart: gateways
        heritage: Tiller
        release: istio
        app: istio-ingressgateway
        istio: ingressgateway
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
#      serviceAccountName: istio-ingressgateway-service-account
      containers:
      - name: istio-proxy
        image: "gcr.io/istio-release/proxyv2:release-1.3-latest-daily"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 15020
        - containerPort: 80
        - containerPort: 443
        - containerPort: 31400
        - containerPort: 15029
        - containerPort: 15030
        - containerPort: 15031
        - containerPort: 15032
        - containerPort: 15443
        - containerPort: 15090
          protocol: TCP
          name: http-envoy-prom
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --log_output_level=default:info
        - --drainDuration
        - '45s' #drainDuration
        - --parentShutdownDuration
        - '1m0s' #parentShutdownDuration
        - --connectTimeout
        - '10s' #connectTimeout
        - --serviceCluster
        - istio-ingressgateway
#        - --zipkinAddress
#        - zipkin:9411
        - --proxyAdminPort
        - "15000"
        - --statusPort
        - "15020"
        - --controlPlaneAuthPolicy
        - NONE
        - --discoveryAddress
#        - istio-pilot:15010
        - 172.31.71.181:15010
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi

        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SDS_ENABLED
          value: "false"
        - name: ISTIO_META_WORKLOAD_NAME
          value: istio-ingressgateway
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        volumeMounts:
#        - name: istio-certs
#          mountPath: /etc/certs
#          readOnly: true
        - name: ingressgateway-certs
          mountPath: "/etc/istio/ingressgateway-certs"
          readOnly: true
        - name: ingressgateway-ca-certs
          mountPath: "/etc/istio/ingressgateway-ca-certs"
          readOnly: true
      volumes:
#      - name: istio-certs
#        secret:
##          secretName: istio.istio-ingressgateway-service-account
##          optional: true
      - name: ingressgateway-certs
        secret:
          secretName: "istio-ingressgateway-certs"
          optional: true
      - name: ingressgateway-ca-certs
        secret:
          secretName: "istio-ingressgateway-ca-certs"
          optional: true
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: beta.kubernetes.io/arch
#                operator: In
#                values:
#                - "amd64"
#                - "ppc64le"
#                - "s390x"
#          preferredDuringSchedulingIgnoredDuringExecution:
#          - weight: 2
#            preference:
#              matchExpressions:
#              - key: beta.kubernetes.io/arch
#                operator: In
#                values:
#                - "amd64"
#          - weight: 2
#            preference:
#              matchExpressions:
#              - key: beta.kubernetes.io/arch
#                operator: In
#                values:
#                - "ppc64le"
#          - weight: 2
#            preference:
#              matchExpressions:
#              - key: beta.kubernetes.io/arch
#                operator: In
#                values:
#                - "s390x"
---

apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
  annotations:
  labels:
    chart: gateways
    heritage: Tiller
    release: istio
    app: istio-ingressgateway
    istio: ingressgateway
spec:
  type: LoadBalancer
  selector:
    release: istio
    app: istio-ingressgateway
    istio: ingressgateway
  ports:
  -
    name: status-port
    port: 15020
    targetPort: 15020
  -
    name: http2
    nodePort: 31380
    port: 80
    targetPort: 80
  -
    name: https
    nodePort: 31390
    port: 443
  -
    name: tcp
    nodePort: 31400
    port: 31400
  -
    name: https-kiali
    port: 15029
    targetPort: 15029
  -
    name: https-prometheus
    port: 15030
    targetPort: 15030
  -
    name: https-grafana
    port: 15031
    targetPort: 15031
  -
    name: https-tracing
    port: 15032
    targetPort: 15032
  -
    name: tls
    port: 15443
    targetPort: 15443
